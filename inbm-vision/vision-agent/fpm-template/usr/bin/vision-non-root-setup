#!/bin/bash
set -euxo pipefail

INTEL_MANAGEABILITY_PUBLIC="/etc/intel-manageability/public"
INTEL_MANAGEABILITY_SECRET="/etc/intel-manageability/secret"
VISION_PUBLIC_DIR="$INTEL_MANAGEABILITY_PUBLIC"/"vision-agent"
VISION_SECRET_DIR="$INTEL_MANAGEABILITY_SECRET"/"vision-agent"
MANAGEABILITY_CACHE_DIR="/var/cache/manageability"
MANAGEABILITY_REPOSITORY_TOOL_DIR="/var/cache/manageability/repository-tool"
VISION_FLASHLESS_FOLDER="/usr/bin/vision-flashless/"
VISION_CONF_DIR="/etc/intel-manageability/public/vision-agent/intel_manageability_vision.conf"
VISION_CONF_SCHEMA_DIR="/usr/share/vision-agent/intel_manageability_vision_schema.xsd"
RTC_DEV_PATH="/dev/rtc0"
XLINK_DEV_PATH="/dev/xlnk"
XLINK_SECURE_DEV_PATH="/dev/xlnksecure"
FLASHLESS_FOLDER="/lib/firmware"
XLINK_PROVISION="/opt/xlink_provision"
FLASHLESS_BACKUP_FOLDER="$FLASHLESS_FOLDER"/"flashless_backup"

function create_and_mod_user {
  # Add vision-agent user
  if [ $(grep -c -i 'vision-agent' /etc/passwd) -gt 0 ]; then
     echo "Found vision-agent in group"
  else
    groupadd -f vision-agent
    useradd -s /usr/sbin/nologin -g vision-agent vision-agent
  fi

  # Add vision-agent into mqtt-ca group
  if [ $(grep -c -i 'mqtt-ca' /etc/group) -gt 0 ]; then
    echo "Add vision-agent into mqtt-ca group"
    usermod -a -G mqtt-ca vision-agent
  else
    echo "Create mqtt-ca group."
    groupadd -f mqtt-ca
    echo "Add vision-agent into mqtt-ca group"
    usermod -a -G mqtt-ca vision-agent
  fi

  # Add vision-agent into mqtt-broker group
  if [ $(grep -c -i 'mqtt-broker' /etc/group) -gt 0 ]; then
    echo "Add vision-agent into mqtt-broker group"
    usermod -a -G mqtt-broker vision-agent
  else
    echo "Create mqtt-broker group."
    groupadd -f mqtt-broker
    echo "Add vision-agent into mqtt-broker group"
    usermod -a -G mqtt-broker vision-agent
  fi

}

function create_and_mod_file {
  # Check vision-agent public folder is exist
  if  [ "$(ls -A $VISION_PUBLIC_DIR)" ]; then
      echo "vision-agent public folder exist."
  else
      echo "create public folder."
      mkdir -p $VISION_PUBLIC_DIR
  fi

  # Check vision-agent secret folder is exist
  if  [ "$(ls -A $VISION_SECRET_DIR)" ]; then
      echo "vision-agent secret folder exist."
  else
      echo "create secret folder."
      mkdir -p $VISION_SECRET_DIR
  fi

  chgrp vision-agent $VISION_PUBLIC_DIR
  chgrp vision-agent $VISION_SECRET_DIR
  chmod g+rw $VISION_PUBLIC_DIR
  chmod g+rw $VISION_SECRET_DIR

  # Change and add group write-access to vision-agent config file
  if  [ "$(ls -A $VISION_CONF_DIR)" ]; then
    chown vision-agent $VISION_CONF_DIR
    chgrp vision-agent $VISION_CONF_DIR
    chmod g+rw $VISION_CONF_DIR
  else
    echo $VISION_CONF_DIR not found.
  fi

  # Change and add group write-access to vision-agent schema file
  if  [ "$(ls -A $VISION_CONF_SCHEMA_DIR)" ]; then
    chgrp vision-agent $VISION_CONF_SCHEMA_DIR
    chmod g+rw $VISION_CONF_SCHEMA_DIR
  else
    echo $VISION_CONF_SCHEMA_DIR not found.
  fi

  # Change and add group write-access to intel-flashless folder and all bin file
  if  [ "$(ls -A $FLASHLESS_FOLDER)" ]; then
    chgrp vision-agent $FLASHLESS_FOLDER
    chmod g+rw $FLASHLESS_FOLDER
  else
    echo $FLASHLESS_FOLDER not found.
  fi

  # Change and add group write-access to intel-flashless folder and all bin file
  if  [ "$(ls -A $VISION_FLASHLESS_FOLDER)" ]; then
    chown vision-agent $VISION_FLASHLESS_FOLDER
    chgrp -R vision-agent $VISION_FLASHLESS_FOLDER
    chmod -R o-rwx $VISION_FLASHLESS_FOLDER
    chmod -R g+rwx $VISION_FLASHLESS_FOLDER
    chmod ug+s $VISION_FLASHLESS_FOLDER/*
  else
    echo $VISION_FLASHLESS_FOLDER not found.
  fi

	# Change and add group write-access to intel-flashless folder and all bin file
  if  [ "$(ls -A $FLASHLESS_BACKUP_FOLDER)" ]; then
    chgrp vision-agent $FLASHLESS_BACKUP_FOLDER
    chmod g+rw $FLASHLESS_BACKUP_FOLDER
  else
    echo $FLASHLESS_FOLDER not found.
  fi

  # Change and add group write-access to xlink provision folder for moving blob and cert files
  if  [ -d "$XLINK_PROVISION" ]; then
    chown vision-agent $XLINK_PROVISION
    chgrp -R vision-agent $XLINK_PROVISION
    chmod -R g+rwx $XLINK_PROVISION
  else
    echo $XLINK_PROVISION not found.
    echo "create provision folder."
    mkdir -p $XLINK_PROVISION
    chown vision-agent $XLINK_PROVISION
    chgrp -R vision-agent $XLINK_PROVISION
    chmod -R g+rwx $XLINK_PROVISION
  fi

  # Temporarily solution here. Need TC to add group read write access for files under mqtt-ca folder
  # Add group write-access to mqtt-ca folder
  if  [ -d "$INTEL_MANAGEABILITY_SECRET"/"mqtt-ca" ]; then
    chmod g+rw "$INTEL_MANAGEABILITY_SECRET"/"mqtt-ca"/*
  else
    echo "mqtt-ca folder not found. Please setup mqtt."
  fi

  # Temporarily assign to mqtt-ca group. Need a group that both TC and BC can access.
  # Change manageability cache folder to group mqtt-ca and add group read/write access.
  if  [ "$(ls -A $MANAGEABILITY_CACHE_DIR)" ]; then
    chgrp mqtt-ca $MANAGEABILITY_CACHE_DIR
    chmod g+rw $MANAGEABILITY_CACHE_DIR
  else
    echo $MANAGEABILITY_CACHE_DIR not found
  fi

  # Temporarily assign to mqtt-ca group. Need a group that both TC and BC can access.
  # Change manageability cache folder to group mqtt-ca and add group read/write access.
  if  [ "$(ls -A $MANAGEABILITY_REPOSITORY_TOOL_DIR)" ]; then
    chgrp mqtt-ca $MANAGEABILITY_REPOSITORY_TOOL_DIR
    chmod g+rw $MANAGEABILITY_REPOSITORY_TOOL_DIR
  else
    echo $MANAGEABILITY_REPOSITORY_TOOL_DIR not found
  fi
}

function mod_xlink_rtc {
  # Add xlink and rtc group, add group read-write access
  groupadd -f rtc
  groupadd -f xlink
  echo "Add vision-agent into rtc group"
  usermod -a -G rtc vision-agent
  echo "Add vision-agent into rtc group"
  usermod -a -G xlink vision-agent

  # Modify and add group write-access to rtc device file
  if  [ "$(ls -A $RTC_DEV_PATH)" ]; then
    echo $RTC_DEV_PATH found.
    chgrp rtc $RTC_DEV_PATH
    chmod g+rw $RTC_DEV_PATH
  else
    echo $RTC_DEV_PATH not found.
  fi

  if  [ "$(ls -A $XLINK_DEV_PATH)" ]; then
    echo $XLINK_DEV_PATH found.
    chgrp xlink $XLINK_DEV_PATH
    chmod g+rw $XLINK_DEV_PATH
  else
    echo $XLINK_DEV_PATH not found.
  fi

  if  [ "$(ls -A $XLINK_SECURE_DEV_PATH)" ]; then
    echo $XLINK_SECURE_DEV_PATH found.
    chgrp xlink $XLINK_SECURE_DEV_PATH
    chmod g+rw $XLINK_SECURE_DEV_PATH
  else
    echo $XLINK_SECURE_DEV_PATH not found.
  fi
}

if ! [ "$(ls -A $INTEL_MANAGEABILITY_SECRET/.provisioned_vision)" ]; then
  echo "Setup vision-agent to run as non-root"
  create_and_mod_user
  create_and_mod_file
  touch $INTEL_MANAGEABILITY_SECRET/.provisioned_vision
  echo "Setup vision-agent to run as non-root complete"
else
  echo non-root-setup already done.
fi

mod_xlink_rtc

exit 0
